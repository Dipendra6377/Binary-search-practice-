Question:
A conveyor belt has packages that must be shipped from one port to another within days days.
The ith package on the conveyor belt has a weight of weights[i]. Each day, we load the ship with packages on the conveyor belt (in the order given by weights).
We may not load more weight than the maximum weight capacity of the ship.

Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within days days.

Example 1:

Input: weights = [1,2,3,4,5,6,7,8,9,10], days = 5
Output: 15
Explanation: A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:
1st day: 1, 2, 3, 4, 5
2nd day: 6, 7
3rd day: 8
4th day: 9
5th day: 10

Note that the cargo must be shipped in the order given, so using a ship of capacity 14 
and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.

ANS:
    
    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size(),l,r,m,sum=0,ans=0,i,mx=0;
        for (i=0;i<weights.size();i++){
            if(weights[i]>mx) mx=weights[i];
            sum+=weights[i];   //we calculate mx and find sum. 
        }
        l=mx;
        r=sum; // then assign low as max and high as sum to calculate mid.
        while(l<=r){
            m=(l+r)/2;
            if(check(m,weights,days)){
//as of now m is our potential ans but to know if there is any other weight from which we can complete packaging in given days. we check that by using check function to decide which part to skip. 
                ans=m;  
                r=m-1;
            }
            else l=m+1;
        }
        return ans;
    }

    bool check(int m,vector<int>&weights,int days){
        int s=0,d=1,i;
        for (i=0;i<weights.size();i++){
            if(s+weights[i]<=m) s+=weights[i];
            else {
                s=weights[i];
                d++;   //we calucalte sum upto mid and checking to decide which part we need to skip. 
            }
        }
        if(d<=days) return true;
        else return false;
    }
